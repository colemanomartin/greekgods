#config_version=5
# field mode tracks the following variables which are used to start a MB at whcih time field ends to resume when MB finished.
# Field tracks Poseidon-hits, olympus-hits, drop-hits (mystery), hydra-hits, spinner-hits (super spinner). During ball locking it stops counting
# drop hits and mystery excludes subway locking.
# field stops for subway locking and during all multiballs.
# field_p_orbit_loops: counter every 2 orbit loops from either direction activates magnet in hardware to drop ball in p area
#    enabled by sis on left disabled by sis on right or not counting when field not running.
# field_o_orbit_loops: counter every 3 orbit loops from either direction activates magnet in hardware to drop ball in 0 area
#    enabled by sis on left disabled by sis on right or not counting when field not running.
# field_hydra: counter when hydra hits = 10 ballblock drops and a hit to scoop starts battle hydra mode stopping field
# field_spinner: counter when spinners total 100 post diverter is enabled and CCW orbit hit send ball to hidden hole for mystery award
# field_subways: counter trips through subway. After 10, BB drops and hit to scoop causes subway locking mode to activate
# Other potential field driven modes: ramp challenge, switch back and forth with doubling of score each time.
# Another potential: orbit challenge. Repeat orbit shots results in a score prize and light show.
mode:
  start_events:
    - mode_base_starting # {device.ball_devices.bd_poseidon_ramp.balls==0 and device.ball_devices.bd_olympus_ramp.balls==0}
    - multiball_poseidon_ramp_ended
    - multiball_olympus_ramp_ended
#    - mode_celestial_mb_stopped
    - mode_scoop_mb_stopped
    - mode_hydra_stopped
#    - mode_open_hades_door_stopped
  stop_events:
    - multiball_poseidon_ramp_started
    - multiball_olympus_ramp_started
    - mode_scoop_mb_started
    - mode_hydra_started
#    - mode_celestial_mb_starting
#    - mode_open_hades_door_starting
  priority: 200

event_player:
#  logicblock_field_poseidon_excitement_updated{device.counters.field_poseidon_excitement.value ==25 and device.multiball_locks.poseidon_lock.locked_balls == 0}:
#    - p_locking_elgible #Timer lives in base same command can be issued from mystery show
#    - relese_bb_override #(if present)
#  logicblock_field_poseidon_excitement_updated{device.counters.field_poseidon_excitement.value==25 and device.multiball_locks.poseidon_lock.locked_balls == 1}:
#    - p_locking_elgible_again #Timer lives in base
#    - relese_bb_override #(if present)
#  logicblock_field_olympus_excitement_updated{device.counters.field_olympus_excitement.value ==25 and device.multiball_locks.olympus_lock.locked_balls == 0}:
#    - o_locking_elgible #Timer lives in base, same command can be issued from mystery show
#    - relese_bb_override #(if present)
#  logicblock_field_olympus_excitement_updated{device.counters.field_olympus_excitement.value ==25 and device.multiball_locks.olympus_lock.locked_balls == 1}:
#    - o_locking_elgible_again #Have to use second event because cant use same event in oramp_mb to both start mode and control a player.
#    - relese_bb_override #(if present)
  logicblock_field_poseidon_excitement_complete: #{device.multiball_locks.poseidon_lock.locked_balls == 0}:
    - p_locking_elgible #Same command can be issued from mystery show
    - relese_bb_override #(if present)
#  logicblock_field_poseidon_excitement_complete{device.multiball_locks.poseidon_lock.locked_balls == 1}:
#    - p_locking_elgible #Same command can be issued from mystery show
#    - p_locking_elgible_again #Have to use second event because cant use same event in oramp_mb to both start mode and control a player.
#    - relese_bb_override #(if present)
  logicblock_field_olympus_excitement_complete: #{device.multiball_locks.olympus_lock.locked_balls == 0}:
    - o_locking_elgible #same command can be issued from mystery show
    - relese_bb_override #(if present)
#  logicblock_field_olympus_excitement_complete{device.multiball_locks.olympus_lock.locked_balls == 1}:
#    - o_locking_elgible_again #Have to use second event because cant use same event in oramp_mb to both start mode and control a player.
#    - relese_bb_override #(if present)
  field_says_invite_hydra_battle_at_scoop:
    - force_bb_down
  field_invite_hydra_at_scoop_hit:
    - release_bb_override
  field_says_invite_super_spinner_at_scoop:
    - force_bb_down
  field_invite_super_spinner_at_scoop_hit:
    - release_bb_override
#These next two lines were in the code but removed 11/15/2020 because they always tested true causing the BB to raise with a ball drain.
#I dont remember why I put them in. It might have been to force a peanility when ball lost causing player to again hit hydra or spinner to requalify
#Anyway it seems to work without these lines
#  ball_drain{device.shots.field_invite_hydra_at_scoop.state_name=='default_one_state'}: #should probably be formatted {device.shots.field_invite_hydra_at_scoop.enabled}
#    - release_bb_override
#    - field_says_raise_bb
#  ball_drain{device.shots.field_invite_super_spinner_at_scoop.state_name=='default_one_state'}: #should probably be formatted {device.shots.field_invite_super_spinner_at_scoop.enabled}
#    - release_bb_override
#    - field_says_raise_bb



#  field_poseidon_mech_hit{device.timers.poseidon_excitement.running and device.timers.poseidon_excitement.ticks>25}: p_locking_elgible
#    - restart_poseidon_excitement{not device.timers.poseidon_excitement.running}
#    - increase_poseidon_excitement{device.timers.poseidon_excitement.running}
#    - complete_poseidon_excitement
  overload_p_hit: bonus_pop #allows pops not needed to qualify mb to be counted for bonus

sequence_shots:
  field_sis_left_to_right:
    playfield: earth_pf
    event_sequence:
      - base_sis_left_vacated_hit
      - base_sis_right_arrived_hit
    sequence_timeout: 3s
  field_sis_right_to_left:
    playfield: earth_pf
    event_sequence:
      - base_sis_right_vacated_hit
      - base_sis_left_arrived_hit
    sequence_timeout: 3s
  field_orbit_counter_clockwise: #used for light show
    playfield: earth_pf
    switch_sequence:
      - s_olympus_rollover
      - s_posideon_rollover
    sequence_timeout: 1.5s
  field_orbit_clockwise: #used for light show
    playfield: earth_pf
    switch_sequence:
      - s_posideon_rollover
      - s_olympus_rollover
    sequence_timeout: 1.5s

shots:
  field_poseidon_mech: #Hits recorded in base timer section
    playfield: earth_pf
    profile: one_state #defigned in base
    hit_events:
      - base_poseidon_pop_hit
      - base_poseidon_left_slingshot_hit
      - base_poseidon_right_slingshot_hit
      - base_poseidon_gate_hit
      - left_ramp_hit #sequence shot in base
    enable_events:
      - mode_field_started
#      - base_sis_left_arrived_hit
#      - mode_field_started{device.switches.s_sis_left.state==1}
#    disable_events:
#      - base_sis_right_arrived_hit
  field_olympus_mech:
    playfield: earth_pf
    profile: one_state #defigned in base
    hit_events:
      #- base_olympus_spinner_hit
      - base_olympus_lower_pop_hit
      - base_olympus_left_pop_hit
      - base_olympus_right_pop_hit
      - base_hole_proximal_hit
      - right_ramp_hit #sequence shot in base
      - counter_field_olympus_gate_hit # one hit each time a ball goes through the olympus spinner
    enable_events:
      - mode_field_started
#      - base_sis_right_arrived_hit
#      - mode_field_started{device.switches.s_sis_right.state==1}
#    disable_events:
#      - base_sis_left_arrived_hit
  field_invite_hydra_at_scoop:
    playfield: earth_pf
    profile: one_state
    hit_events:
      - base_scoop_from_pf_hit
    enable_events:
      - field_says_invite_hydra_battle_at_scoop
    disable_events:
      - mode_field_stopping
      - field_invite_hydra_at_scoop_hit
  field_invite_super_spinner_at_scoop:
    playfield: earth_pf
    profile: one_state
    hit_events:
      - base_scoop_from_pf_hit
    enable_events:
      - field_says_invite_super_spinner_at_scoop
    disable_events:
      - mode_field_stopping
      - field_invite_super_spinner_at_scoop_hit
#Example
#light_player:
#  "{machine.test_machine_var == 23}":
#    led4: red
#  "{current_player.test_player_var == 42}":
#    led5: red


counters:
  field_olympus_excitement: #Keeps score on olympus area to enable olympus lock to lock balls commands over ball lock in event player above
    starting_count: 0
    persist_state: True
    count_complete_value: 25
    reset_on_complete: False
    enable_events:
      - multiball_lock_olympus_lock_locked_ball{device.multiball_locks.olympus_lock.locked_balls == 1}
      - mode_field_started
    count_events:
      - sis_right_olympus_mech_hit
      - field_olympus_mech_hit
      - super_spinner_olympus_mech_hit
      - slide_show_progress_to_ramp_mb_active #This is a hack to send an update to the temple_dislay so the animation starts with the pillar partially full on a new ball.
    reset_events:
      - multiball_olympus_ramp_started
      - multiball_lock_olympus_lock_locked_ball{device.multiball_locks.olympus_lock.locked_balls == 1}
      - game_ending
    control_events:
      - event: logicblock_field_olympus_excitement_updated{device.counters.field_olympus_excitement.value >27}
        action: jump
        value: 27 #update the logic block so animation bar does not get to high
  field_poseidon_excitement: #Keeps score on poseidon area to enable poseidon lock to lock balls commands over ball lock in event player above
    starting_count: 0
    persist_state: True
    count_complete_value: 25
    reset_on_complete: False
    enable_events:
      - multiball_lock_poseidon_lock_locked_ball{device.multiball_locks.poseidon_lock.locked_balls == 1}
      - mode_field_started
    count_events:
      - sis_left_poseidon_mech_hit
      - field_poseidon_mech_hit
      - super_spinner_poseidon_mech_hit
      - slide_show_progress_to_ramp_mb_active #This is a hack to send an update to the temple_dislay so the animation starts with the pillar partially full on a new ball.
    reset_events:
      - multiball_poseidon_ramp_started
      - multiball_lock_poseidon_lock_locked_ball{device.multiball_locks.poseidon_lock.locked_balls == 1}
      - game_ending
    control_events:
      - event: logicblock_field_poseidon_excitement_updated{device.counters.field_poseidon_excitement.value >27}
        action: jump
        value: 27 #update the logic block so animation bar does not get to high

  field_revealed_sling_hits:
    count_events: base_revealed_slingshot_hit
    reset_on_complete: False
    persist_state: False
    reset_events:
      - mode_field_started
      - mystery_solved #this is usually what resets it with mystery awards
      - mystery_says_reset_field_revealed_sling_hits #This is used to reset when hydra and scoop mb start.
    events_when_complete: mystery_time #activate mystery shot
    count_complete_value: 1

  field_hydra_hits: #count hydra hits to qualify hydra battle which is started by invited scoop shot
    enable_events: mode_field_started
    count_events:
      - base_hydra_hit{mode.hydra.active == False}
      - base_hydra_hit{mode.super_spinner.active} # count double for super spinner
    persist_state: True
    reset_events:
      - field_invite_hydra_at_scoop_hit # Causes mode_hydra_starting
      - game_ending
    events_when_complete: field_says_invite_hydra_battle_at_scoop ##battle_hydra #activate mode
    count_complete_value: 29
    disable_on_complete: False #Leave it working so it can subtract if field ends
    control_events:
      - event: logicblock_field_hydra_hits_updated{current_player.player_base_hydras>28 and (device.multiball_locks.poseidon_lock.locked_balls > 0 or device.multiball_locks.olympus_lock.locked_balls > 0)} #player_base_hydras>23 and
        action: jump
        value: 28 # cap it close to goal if there is a ball locked somehwere. This prevents starting hydra when a ball is locked.
      - event: ball_drain{device.shots.field_invite_hydra_at_scoop.enabled} # state_name=='default_one_state'}
        action: jump
        value: 28 #Dont start completely over if ball drained before scoop hit.
  field_spins: #Counts spin hits to qualify super spinner mode which is started by invited scoop shot
    enable_events: mode_field_started
    count_events:
      - base_olympus_spinner_hit{mode.super_spinner.active == False}
      - base_orbit_spinner_hit{mode.super_spinner.active == False}
      - base_orbit_spinner_2_hit{mode.super_spinner.active == False}
    persist_state: True #does not reset when ball drains
    reset_events:
      - field_invite_super_spinner_at_scoop_hit # Causes mode_super_spinner to start
      - game_ending
    events_when_complete: field_says_invite_super_spinner_at_scoop
    count_complete_value: 94
    disable_on_complete: False #Leave it working so it can subtract if field ends from ball drain
    control_events:
      - event: logicblock_field_spins_updated{current_player.player_base_spins>90 and (device.multiball_locks.poseidon_lock.locked_balls == 2 or device.multiball_locks.olympus_lock.locked_balls == 2)}
        action: jump
        value: 88 # cap it close to goal if there is a ball locked somehwere. This prevents starting super spinner when two balls is locked.
      - event: ball_drain{device.shots.field_invite_super_spinner_at_scoop.enabled} #state_name=='default_one_state'}
        action: jump
        value: 90 #Dont start completely over if ball drained before scoop hit.
    debug: True
  field_olympus_gate: #Lets spinner work as an olympyus mech. one hit per time throught the spinner.
    enable_events: mode_field_started
    multiple_hit_window: 2500ms
    count_events:
      base_olympus_spinner_hit
    count_complete_value: 1000000
    disable_on_complete: False


#    enable_events:
#      - mode_field_started
#      - mode_hydra_ending
  #The following counters are used for the end of ball bonus
  field_pops: #Counts number of pops after qualifying for locking
    reset_events: ball_started
    count_events:
      - bonus_pop # from event player in o and p ramp_mb
  field_sisses:
    count_events:
      - bonus_cnt_pb_rolled_medial_hit
      - bonus_cnt_pb_rolled_lateral_hit
#      - mode_sismedial_started
#      - mode_sislateral_started
    reset_events: ball_started
  field_orbits:
    count_events:
      - bonus_orbit_clockwise_hit
      - bonus_orbit_counter_clockwise_hit
    reset_events: ball_started

  drop_hits:
    count_events:
      - drop_target_star_distal_down
      - drop_target_star_middle_down
      - drop_target_star_proximal_down
    reset_on_complete: False
    persist_state: True
    reset_events:
      - mode_celestial_mb_started
      - game_ending
#    events_when_complete: drop_target_threshold_for_celestial_mb_met
    multiple_hit_window: 100ms # not clear if this is for each event or done one at a time
    count_complete_value: 6

#  field_drop_bank_complete_hits:
#    count_events: drop_target_bank_cluster_down
#    reset_on_complete: False
#    persist_state: True
#    reset_events: drop_target_bank_cluster_up
#    count_complete_value: 2


show_player:
  field_orbit_counter_clockwise_hit:
    show_orbit_counter_clockwise_blue2blue:
      speed: 120
      loops: 0
  field_orbit_clockwise_hit:
    show_orbit_clockwise_blue2blue:
      speed: 120
      loops: 0
  field_sis_left_to_right_hit:
    show_orbit_clockwise_white2blue:
      speed: 90
      loops: 0
  field_sis_right_to_left_hit:
    show_orbit_counter_clockwise_white2blue:
      speed: 90
      loops: 0
  left_ramp_hit: #Sequence shot from base
    show_left_ramp_blue2blue:
      speed: 120
      loops: 0
  right_ramp_hit: #sequence shot from base
    show_right_ramp_blue2blue:
      speed: 120
      loops: 0

  drop_target_bank_cluster_down:
    show_r_sling_pulse:
      speed: 3
  mystery_solved:
    show_r_sling_pulse:
      action: stop
  mode_field_started{device.drop_target_banks.cluster.complete}: #True when all down
    show_r_sling_pulse:
      speed: 3
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==2}:
    show_hydra_01:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==4}:
    show_hydra_01:
      action: stop
    show_hydra_02:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==6}:
    show_hydra_02:
      action: stop
    show_hydra_03:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==8}:
    show_hydra_03:
      action: stop
    show_hydra_04:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==10}:
    show_hydra_04:
      action: stop
    show_hydra_05:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==12}:
    show_hydra_05:
      action: stop
    show_hydra_06:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==14}:
    show_hydra_06:
      action: stop
    show_hydra_07:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==16}:
    show_hydra_07:
      action: stop
    show_hydra_08:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==18}:
    show_hydra_08:
      action: stop
    show_hydra_09:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==20}:
    show_hydra_09:
      action: stop
    show_hydra_10:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==22}:
    show_hydra_10:
      action: stop
    show_hydra_11:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==24}:
    show_hydra_11:
      action: stop
    show_hydra_12:
      speed: 2
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==26}:
    show_hydra_12:
      action: stop
    show_hydra_13:
      speed: 3
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==28}:
    show_hydra_13:
      action: stop
    show_hydra_14:
      speed: 3
      action: play
  logicblock_field_hydra_hits_updated{current_player.player_base_hydras==29}:
    show_hydra_14:
      action: stop
    show_hydra_15:
      speed: 4
      action: play

  mode_field_started{current_player.player_base_hydras==2 or current_player.player_base_hydras==3}:
    show_hydra_01:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==4 or current_player.player_base_hydras==5}:
    show_hydra_02:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==6 or current_player.player_base_hydras==7}:
    show_hydra_03:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==8 or current_player.player_base_hydras==9}:
    show_hydra_04:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==10 or current_player.player_base_hydras==11}:
    show_hydra_05:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==12 or current_player.player_base_hydras==13}:
    show_hydra_06:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==14 or current_player.player_base_hydras==15}:
    show_hydra_07:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==16 or current_player.player_base_hydras==17}:
    show_hydra_08:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==18 or current_player.player_base_hydras==19}:
    show_hydra_09:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==20 or current_player.player_base_hydras==21}:
    show_hydra_10:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==22 or current_player.player_base_hydras==23}:
    show_hydra_11:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==24 or current_player.player_base_hydras==25}:
    show_hydra_12:
      speed: 2
      action: play
  mode_field_started{current_player.player_base_hydras==26 or current_player.player_base_hydras==27}:
    show_hydra_13:
      speed: 3
      action: play
  mode_field_started{current_player.player_base_hydras==28}:
    show_hydra_14:
      speed: 3
      action: play
  mode_field_started{current_player.player_base_hydras==29}:
    show_hydra_15:
      speed: 4
      action: play

widgets:
  invite_super_spinner:
    - type: image
      image: wedge_super_spinner
      scale: 0.3
      rotation: -25
      x: 450
      y: 760
      anchor_x: center
      anchor_y: center
  invite_hydra:
    - type: image
      image: wedge_battle_hydra
      scale: 0.3
      rotation: -25
      x: 450
      y: 760
      anchor_x: center
      anchor_y: center

widget_player:
  field_says_invite_hydra_battle_at_scoop:
    invite_hydra:
      slide: show_progress_to_ramp_mb #Adds widget on top of this slide which was posted in temple display
      action: add
      widget_settings:
        expire: 10 sec
        z: 5
  field_invite_hydra_at_scoop_hit:
    invite_hydra:
      slide: show_progress_to_ramp_mb #Adds widget on top of this slide which was posted in temple display
      action: remove
  field_says_invite_super_spinner_at_scoop:
    invite_super_spinner:
      slide: show_progress_to_ramp_mb #Adds widget on top of this slide which was posted in temple display
      action: add
      widget_settings:
        expire: 10 sec
        z: 5
  field_invite_super_spinner_at_scoop_hit:
    invite_super_spinner:
      slide: show_progress_to_ramp_mb #Adds widget on top of this slide which was posted in temple display
      action: remove
