#config_version=5
#https://htmlcolorcodes.com/color-names/
#When mode starts attract display loop is started by showplayer. If the knee switch is hit
#Attract mode behavior changes. The timer starts. This stops display loop and initiates
#the counter at 0.  Each logic block update of the counter displays a slide with a index equal
#to the value of the counter.  The counter increments with ticks or with right flipper if the
#value of the counter is < total number of slides. The counter decrements with left flipper
#if the value of the counter is > 0. When the counter is complete its event restarts the
#attract display loop.
coil_player:
  mode_attract_started: #drop when starting attract so if ball in sub, it can escape
    c_ballblock_fall:
      action: pulse

show_player:
  timer_instructions_clock_started:
    attract_backbox_display_loop:
      action: stop
  logicblock_instruction_slide_controller_complete:
    attract_backbox_display_loop:
      speed: 1
  mode_attract_started:
    attract_backbox_display_loop:
      speed: 1
    attract_playfield_display_loop:
      speed: 1
    show_rand_paralell:
      speed: 1
    show_poppers:
      speed: 1
      priority: 100
    attract_GG_logo_sparker:
      speed: 5
    attract_swirl_L_spk_green:
      speed: 10
    attract_swirl_R_spk_green:
      speed: 10
    attract_start_launch:
      speed: 50
    show_hades_lights:
      speed: 1

timers:
  instructions_clock:
    start_value: 0
    end_value: 11 ##########################Set to number of slides
    tick_interval: 30s #Display duration each slide
    direction: up
    control_events:
      - event: s_accessory_active{device.timers.instructions_clock.running==False} #Only reset if not already running
        action: restart
      - event: s_left_flipper_active  #User moved to new slide so dont force slide change until has time to read
        action: jump #Using jump instead of restart so that timer stays dead unless already engaged by knee
        value: 0
      - event: s_right_flipper_active
        action: jump
        value: 0
      - event: logicblock_instruction_slide_controller_complete
        action: stop
  #This timer posts a complete event every time a slide is to be advanced or decremented
  #It copies the counter count and control events. When one of these events is posted 100 ms
  #Later the timer complete event triggers the slide player to play a slide acording to
  #The updated value of the counter.  This is a work around because control events do not
  #Issue a logic_block update event at present.  If that changes remove this timer and
  #Drive the slide player with update events.  Note it might be possible to use an
  #event player with a delay in place of this timer.
  slide_advance_pause:
    start_value: 0
    end_value: 1
    tick_interval: 100ms
    direction: up
    control_events:
      - event: s_left_flipper_active{device.timers.instructions_clock.running}  #User moved to new slide so dont force slide change until has time to read
        action: restart
      - event: s_right_flipper_active{device.timers.instructions_clock.running}
        action: restart
      - event: timer_instructions_clock_tick
        action: restart
      - event: timer_instructions_clock_started
        action: restart
#      - event: logicblock_instruction_slide_controller_complete
#        action: restart

counters:
  instruction_slide_controller:
    starting_count: 1
    count_complete_value: 11 #Must be one higher than number of slides to allow last slide to retain on screen
    enable_events: timer_instructions_clock_started
    restart_events: #enables the counter and resets it to count 0
      - timer_instructions_clock_started
    count_events:
      - s_right_flipper_active{device.timers.instructions_clock.running} # {device.counters.instruction_slide_controller.value<11} ####Update with number slides (0 is a slide)
      - timer_instructions_clock_tick{device.timers.instructions_clock.ticks>0} #conditional to keep first tick when timer starts from skipping first slide
    control_events:
      - event: s_left_flipper_active{device.timers.instructions_clock.running and device.counters.instruction_slide_controller.value>1}
        action: subtract
        value: 1
#      - event: flipper_cancel
#        action: jump
#        value: 11
    disable_on_complete: true
    reset_on_complete: true
    persist_state: false #resets with each new ball


slide_player:
#  logicblock_instruction_slide_controller_updated{device.counters.instruction_slide_controller.value==0}: instruction_slide_0
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==1 and device.counters.instruction_slide_controller.enabled}:
    instruction_slide_2:
      action: remove
    instruction_slide_1:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==2}:
    instruction_slide_1:
      action: remove
    instruction_slide_3:
      action: remove
    instruction_slide_2:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==3}:
    instruction_slide_2:
      action: remove
    instruction_slide_4:
      action: remove
    instruction_slide_3:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==4}:
    instruction_slide_3:
      action: remove
    instruction_slide_5:
      action: remove
    instruction_slide_4:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==5}:
    instruction_slide_4:
      action: remove
    instruction_slide_6:
      action: remove
    instruction_slide_5:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==6}:
    instruction_slide_5:
      action: remove
    instruction_slide_7:
      action: remove
    instruction_slide_6:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==7}:
    instruction_slide_6:
      action: remove
    instruction_slide_8:
      action: remove
    instruction_slide_7:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==8}:
    instruction_slide_7:
      action: remove
    instruction_slide_9:
      action: remove
    instruction_slide_8:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==9}:
    instruction_slide_8:
      action: remove
    instruction_slide_10:
      action: remove
    instruction_slide_9:
      action: play
  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==10}:
    instruction_slide_9:
      action: remove
    instruction_slide_10:
      action: play
#  timer_slide_advance_pause_complete{device.counters.instruction_slide_controller.value==11}:
  logicblock_instruction_slide_controller_complete:
    instruction_slide_10:
      action: remove
#    instruction_slide_1:
#      action: remove
#    instruction_slide_9:
#      action: remove
#    instruction_slide_8:
#      action: remove
#    instruction_slide_7:
#      action: remove
#    instruction_slide_6:
#      action: remove
#    instruction_slide_5:
#      action: remove
#    instruction_slide_4:
#      action: remove
#    instruction_slide_3:
#      action: remove
#    instruction_slide_2:
#      action: remove
    instruction_slide_1:
      action: remove

sound_player:
  mode_attract_will_stop: v_welcome # mode_base_started'====== Args={'queue': <QueuedEvent>, 'player': 1, 'ball': 1,
  player_added: snd_startbutton

slides:
  instruction_slide_1:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_intro
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 1/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_2:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_prmb
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 2/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_3:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_knee_switch
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 3/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_4:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_ormb
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 4/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_5:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_powerball
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 5/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_6:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_mystery
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 6/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_7:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_outlanes
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 7/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_8:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_goddess
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 8/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
  instruction_slide_9:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_super_spinner
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 9/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
    - type: image
      image: meander_circle1invert
      scale: 0.75
      x: 16%
      y: 46%
      z: 3
      animations:
        add_to_slide:
        - property: rotation
          value: 0
          relative: false
          duration: 0
        - property: rotation
          value: 360
          relative: false
          duration: 4s
          easing: linear #http://docs.missionpinball.org/en/latest/displays/widgets/easing.html
          repeat: true
  instruction_slide_10:
    target: score_lcd
    widgets:
    - type: image
      image: instructions_hydra
      scale: 1
      y: 66.5%
      anchor_y: center
      anchor_x: center
      z: 1
    - type: text
      text: "Slide 10/10"
      font_name: greekgods3
      font_size: 72
      color: white
      x: 88%
      y: 34%
      anchor_y: bottom
      anchor_x: left
      z: 2
