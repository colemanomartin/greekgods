#config_version=5
hardware:
  platform: p3_roc
  driverboards: pdb

mpf:
  report_crashes: never

p_roc:
#  driverboards: pdb
  pd_led_boards:
    0: # ws281x_0 = flippers;  ws281x_1 = out lains and orbit;  ws281x_2 = shooter lane
       use_ws281x_1: TRUE
       ws281x_1_first_address: 100
       ws281x_1_last_address: 441
       use_ws281x_0: TRUE
       ws281x_0_first_address: 500
       ws281x_0_last_address: 661
       use_ws281x_2: TRUE
       ws281x_2_first_address: 800
       ws281x_2_last_address: 925
    2: # ws281x_0 = back box
       use_ws281x_0: TRUE
       ws281x_0_first_address: 100 #Data 0 J8 pin 19
       ws281x_0_last_address: 249
       use_servo_6: TRUE
       max_servo_value: 300

machine:
  balls_installed: 7 #Including hades
  min_balls: 1 #Will start with just the ball in hades

config:
- hardware
- lights
- video
- sound


modes:
  - base #100
  - extra_balls #150 hades extra ball is triggered in hades.
  - servo #10000 Manager
  - scoop #10000 Manager
  - bb_down #Manager
  - field #200
  - temple_display # 400 adds widgets to playfield display to show where ball will go in response to ramp diverter flap
  - scoop_mb #650
  - hydra #700  Keypress V enters via back door.
  - goddess_mb #800
  - skill_shot #900 needs to be above goddess_mb
  - p_ramp_mb #1000
  - o_ramp_mb #1100
  - double_ramp_mb #1200
#  - celestial_mb
  - sis_left #J 300 ust for showing slides associated with getting points in P area and enabling loop counts to feed mag diverter
  - sis_right #350 Just for showing slides associated with getting points in O area and enabling loop counts to feed mag diverter
  - mystery #2000
  - super_spinner #1400
#  - sound_loops #150
  - sound_effects # 175
#  - drain_display #2000
  - hades_bug_game #600
  - bottom_rotation # 1500
  - banked_l_bs #250000
  - banked_r_bs #2500
  - sweep_server #3000
  - hades_bonus_game #1500
  - bonus
  - high_score
  - river_a_fast #6100
  - river_b_fast #6200
  - river_c_fast #6300
  - river_d_fast #6400
coil_player:
  machine_reset_phase_2: #drops block at startup in case a ball is in subway
    c_ballblock_fall:
      action: pulse

ball_saves:
  #Banked ball saves are spun off into their own modes.
  bs_default: #This could probably be moved to base.
    source_playfield: earth_pf
    active_time: 10s
    hurry_up_time: 1s #does not add to BS, just posts for light
    grace_period: 1s
    early_ball_save_events:
      - s_left_outlane_active
      - s_right_outlane_active
    enable_events: mode_base_started
    timer_start_events: balldevice_bd_plunger_ball_eject_success
    auto_launch: yes
    balls_to_save: 2
    debug: no
#  bs_malstrom:
#    source_playfield: earth_pf
#    active_time: 2s
#    hurry_up_time: 0s
#    grace_period: 0s
#    early_ball_save_events:
#      - s_left_outlane_active
#      - s_right_outlane_active
#    enable_events: mode_base_started
#    timer_start_events: diverter_malstrom_mag_activating #ball_started
#    auto_launch: yes
#    balls_to_save: 1
#    debug: yes

#Seems like this one should not work since it enables but does not have a start event
  bs_scoop_eject: #showplayer in base
    source_playfield: earth_pf
    active_time: 2.5s
    hurry_up_time: 0s
    grace_period: 0s
    enable_events: balldevice_bd_scoop_ball_eject_success
    disable_events: mode_field_stopped
#    timer_start_events: #balldevice_bd_scoop_ball_eject_success
    auto_launch: yes
    balls_to_save: 1
    debug: yes

#Dont know why this is present.  Shouldnt this just be for outlanes? Also missing start event
#Alternatively make it work as in TNA?

  bs_bottom_lanes: #show player in base
    source_playfield: earth_pf
    active_time: 5s
    hurry_up_time: 0s
    grace_period: 1s
    enable_events: bottom_lane_group_hit_complete
    auto_launch: yes
    balls_to_save: 1
    debug: yes

#ball_holds:
#  quiet_underworld: #keeps underworld from ejecting ball when not in play
#    balls_to_hold: 1
#    hold_devices: bd_u_trough
#    source_playfield: hades_pf
#    enable_events:
#      - mode_game_started
#      - timer_hades_immunity_complete
#    disable_events:
#      - hades_bonus_intro_show_done
#    release_all_events:
#      - hades_bonus_intro_show_done
#    debug: true



# These from the docs for the attract mode high score display
widget_styles:
  attract_mode_high_score_display_label:
    font_size: 100
    anchor_x: left
    anchor_y: top
    x: center-1200
    bold: true
    font_name: greekgods3
  attract_mode_high_score_display_name:
    font_size: 100
    anchor_x: right
    anchor_y: top
    x: center+400
    font_name: greekgods3
  attract_mode_high_score_display_score:
    font_size: 100
    anchor_x: right
    anchor_y: top
    x: center+1200
    number_grouping: true
    min_digits: 1
    font_name: greekgods3

state_machines: # http://docs.missionpinball.org/en/latest/config/state_machines.html
# This state machine activates the magnet on the side of the powerball to feed the mechs on that side of the upper playfield.
# When either the poseidon area or olympus area are maxed, the magnets switch to feed the other side.
# magnets deactivate with MB and with calls for a mystery mode top of the orbit shot.
# Problem: machine does not reset at game end.  Maybe insert event for game will start/end to bring machine
# back to default state.
#State machine conditions against if p_ramp and or o_ramp modes running. These modes run when p or o
#locking is elgible and shuts down once a ball is locked or at end of MB
  feeder_magnets:
    states:
      start:
        label: undefined
      feed_poseidon:
        label: feed_p
      feed_olympus:
        label: feed_o
      magnets_off:
        label: off
      pause_poseidon:   #for passing ball from shooter lane to PF added 11/22/20
        label: pause_p
      pause_olympus:    #for passing ball from shooter lane to PF
        label: pause_o

    transitions:
      - source: start
        target: feed_poseidon
        events: game_started{device.switches.s_sis_left.state==1} #mode_game_started{device.switches.s_sis_left.state==1}
        events_when_transitioning:
          - state_start_to_feed_poseidon
          - state_says_enable_poseidon_mag
          - state_says_disable_olympus_mag
      - source: start
        target: feed_olympus
        events: game_started{device.switches.s_sis_right.state==1} #mode_game_started{device.switches.s_sis_right.state==1}
        events_when_transitioning:
          - state_start_to_feed_olympus
          - state_says_enable_olympus_mag
          - state_says_disable_poseidon_mag

      - source: feed_poseidon
        target: feed_olympus
        events:
          - field_sis_left_to_right_hit{not mode.o_ramp_mb.active}
          - mode_p_ramp_mb_started{not mode.o_ramp_mb.active} #triggered by p_locking_elgible but not if other side also elgible/active then mags off
          - mode_o_ramp_mb_stopped{device.switches.s_sis_right.state==1} #o ramp mb either drained or locked a ball so return to diverting to olympus if sw on olympus side
        events_when_transitioning:
          - state_poseidon_to_olympus
          - state_says_enable_olympus_mag
          - state_says_disable_poseidon_mag

      - source: feed_olympus
        target: feed_poseidon
        events:
          - field_sis_right_to_left_hit{not mode.p_ramp_mb.active}
          - mode_o_ramp_mb_started{not mode.p_ramp_mb.active} #triggered by o_locking_elgible but not if other side also eligble/active then mags off
          - mode_p_ramp_mb_stopped{device.switches.s_sis_left.state==1} #p ramp mb either drained or locked a ball so return to diverting to poseidon 7-4-20
        events_when_transitioning:
          - state_olympus_to_posidon
          - state_says_enable_poseidon_mag
          - state_says_disable_olympus_mag

      - source: feed_poseidon
        target: magnets_off
        events:
          - mode_p_ramp_mb_started{mode.o_ramp_mb.active} #triggered by both sides qualified
          - mode_mystery_started
          - multiball_poseidon_ramp_started
          - multiball_olympus_ramp_started
          - multiball_scoop_mb_started
          - mode_goddess_mb_started
          - mode_hydra_started
        events_when_transitioning:
          - state_feed_poseidon_to_all_off
          - state_says_disable_poseidon_mag
          - state_says_disable_olympus_mag
      - source: feed_olympus
        target: magnets_off
        events:
          - mode_o_ramp_mb_started{mode.p_ramp_mb.active} #triggered by both sides qualified
          - mode_mystery_started
          - multiball_poseidon_ramp_started
          - multiball_olympus_ramp_started
          - multiball_scoop_mb_started
          - mode_goddess_mb_started
          - mode_hydra_started
        events_when_transitioning:
          - state_feed_olympus_to_all_off
          - state_says_disable_poseidon_mag
          - state_says_disable_olympus_mag
# There is a corner condition where when mystery ends if the power ball side's mode is active the magnet stays off until a sis switch or MB mode activates
# Another potential point of weirdness is that if mystery starts scoop or hydra the state will go to mag off to a respective side to mag off again when MB starts.
      - source: magnets_off
        target: feed_poseidon
        events:
          - mode_p_ramp_mb_stopped{device.switches.s_sis_left.state==1} #A ball was locked
          - mystery_hole_received_ball_hit{device.switches.s_sis_left.state==1 and not mode.p_ramp_mb.active} #OK to divert left if ball left and mode not trying to lock ball
          - multiball_poseidon_ramp_ended{device.switches.s_sis_left.state==1}
          - multiball_olympus_ramp_ended{device.switches.s_sis_left.state==1}
          - multiball_scoop_mb_ended{device.switches.s_sis_left.state==1}
          - multiball_goddess_ended{device.switches.s_sis_left.state==1}
          - multiball_hydra_ended{device.switches.s_sis_left.state==1}
        events_when_transitioning:
          - state_all_off_to_feed_poseidon
          - state_says_enable_poseidon_mag
          - state_says_disable_olympus_mag

      - source: magnets_off
        target: feed_olympus
        events:
          - mode_o_ramp_mb_stopped{device.switches.s_sis_right.state==1} #A ball was locked
          - mystery_hole_received_ball_hit{device.switches.s_sis_right.state==1 and not mode.o_ramp_mb.active} #OK to divert right if ball right and mode not trying to lock ball
          - multiball_poseidon_ramp_ended{device.switches.s_sis_right.state==1}
          - multiball_olympus_ramp_ended{device.switches.s_sis_right.state==1}
          - multiball_scoop_mb_ended{device.switches.s_sis_right.state==1}
          - multiball_goddess_ended{device.switches.s_sis_right.state==1}
          - multiball_hydra_ended{device.switches.s_sis_right.state==1}
        events_when_transitioning:
          - state_all_off_to_feed_olympus
          - state_says_enable_olympus_mag
          - state_says_disable_poseidon_mag
        #Next four handle condition of shooter lane ejects
      - source: feed_poseidon
        target: pause_poseidon
        events: s_shooterlane_inactive
        events_when_transitioning:
          - state_says_pause_poseidon_mag_for_ball_injection
          - state_says_disable_poseidon_mag
      - source: pause_poseidon
        target: feed_poseidon
        events:
          - logicblock_base_timer_ball_launching_complete
          - s_posideon_rollover_active
        events_when_transitioning:
          - state_says_ok_resume_feed_poseidon_after_ball_injection
          - state_says_enable_poseidon_mag
      - source: feed_olympus
        target: pause_olympus
        events: s_shooterlane_inactive
        events_when_transitioning:
          - state_says_pause_olympus_mag_for_ball_injection
          - state_says_disable_olympus_mag
      - source: pause_olympus
        target: feed_olympus
        events:
          - logicblock_base_timer_ball_launching_complete
          - s_posideon_rollover_active
        events_when_transitioning:
          - state_says_ok_resume_feed_olympus_after_ball_injection
          - state_says_enable_olympus_mag
        #Next 3 sent back to start condition when game ends. Maybe use mode_attract_started if this does not work.
      - source: feed_poseidon
        target: start
        events:
          - game_will_end
        events_when_transitioning:
          - state_is_resetting
          - state_says_disable_poseidon_mag
          - state_says_disable_olympus_mag
      - source: feed_olympus
        target: start
        events:
          - game_will_end
        events_when_transitioning:
          - state_is_resetting
          - state_says_disable_poseidon_mag
          - state_says_disable_olympus_mag
      - source: magnets_off
        target: start
        events:
          - game_will_end
        events_when_transitioning:
          - state_is_resetting
    debug: True
    file_log: full #none basic full
    console_log: full
    persist_state: False # cant be True in config


  ramp_flap_control: #http://docs.missionpinball.org/en/latest/config/state_machine_states.html
    #This state machine controls the position of the ramp flap. Valid states Divert left, right, middle and hold position.
    #Flap is instructed not to move (hold) when a MB is running. If a double MB is set up it goes to middle and when the MB starts it diverts left.
    states:
      start: #required as a starting state for all state machines
        label: undefined
      divert_left:
        label: left
      divert_right:
        label: right
      divert_middle:
        label: middle
      divert_hold_position:
        label: time_out
    transitions:

      - source: start
        target: divert_middle
        events: machine_reset_phase_3
        events_when_transitioning:
          - ramp_flap_changing_state_from_start_to_middle
          - ramp_flap_control_move_middle

      - source: divert_middle
        target: divert_left
        events:
          - mode_servo_started{device.switches.s_sis_left.state==1}
          - mode_servo_started{device.switches.s_sis_right.state==0} #Sometimes left switch is tricky so this is a failsafe
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value>0} #If a MB starts with flap in middle (Double P&O mb) this gets the flap over to p for the play
          - base_sis_left_arrived_hit{device.counters.base_multiballs_active.value == 0} #This condition should nerver be hit
        events_when_transitioning:
          - ramp_flap_changing_state_from_middle_to_divert_left
          - ramp_flap_control_move_divert_left

      - source: divert_middle
        target: divert_right
        events:
          - mode_servo_started{device.switches.s_sis_right.state==1} #Sometimes left switch is tricky so this is a failsafe
          - base_sis_right_arrived_hit{device.counters.base_multiballs_active.value == 0}
        events_when_transitioning:
          - ramp_flap_changing_state_from_middle_to_divert_right
          - ramp_flap_control_move_divert_right


      - source: divert_left
        target: divert_middle
        events:
          - game_ending
          - multiball_lock_poseidon_lock_full{device.ball_devices.bd_olympus_ramp.balls==2} #Player has set up a double MB both locks full.
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_left_to_middle
          - ramp_flap_control_move_middle

      - source: divert_left
        target: divert_right
        events:
          - multiball_lock_poseidon_lock_full{device.ball_devices.bd_olympus_ramp.balls<2} #Ready for a MB on poseidon
          - base_sis_right_arrived_hit{device.ball_devices.bd_olympus_ramp.balls<2} #Most common power ball / diverter situation
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_left_to_divert_right
          - ramp_flap_control_move_divert_right

      - source: divert_left
        target: divert_hold_position
        events:
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value>0}
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_left_to_hold_current_position
          - ramp_flap_control_stay_in_current_position #This event is unregisterd by the servo, might be useful for show_players

      - source: divert_hold_position
        target: divert_left #coming out of MB
        events:
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value==0 and device.switches.s_sis_left.state==1}
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value==0 and device.switches.s_sis_right.state==0} #If powerball is in motion its possible it could end up on wrong side but should eventually correct with next event in list.
          - base_sis_left_arrived_hit{device.counters.base_multiballs_active.value == 0} #This should not be needed but here as backup
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_hold_to_divert_left
          - ramp_flap_control_move_divert_left

      - source: divert_hold_position
        target: divert_right #coming out of MB
        events:
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value==0 and device.switches.s_sis_left.state==0}
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value==0 and device.switches.s_sis_right.state==1} #If powerball is in motion its possible it could end up on wrong side but should eventually correct with next event in list.
          - base_sis_right_arrived_hit{device.counters.base_multiballs_active.value == 0} #This should not be needed but here as backup
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_hold_to_divert_right
          - ramp_flap_control_move_divert_right

      - source: divert_hold_position #This may not be needed but putting it in if there is an edge case where game ends with divert at middle.
        target: divert_middle
        events: game_ending
        events_when_transitioning:
          - ramp_flap_changing_state_from_hold_to_middle
          - ramp_flap_control_move_middle


      - source: divert_right
        target: divert_middle
        events:
          - game_ending
          - multiball_lock_olympis_lock_full{device.ball_devices.bd_poseidon_ramp.balls==2} #Double MB ready
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_right_to_middle
          - ramp_flap_control_move_middle

      - source: divert_right
        target: divert_left
        events:
          - multiball_lock_olympus_lock_full{device.ball_devices.bd_poseidon_ramp.balls<2} #Ready for olympus MB
          - base_sis_left_arrived_hit{device.ball_devices.bd_poseidon_ramp.balls<2} #Most common powerball diverter event
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_right_to_divert_right
          - ramp_flap_control_move_divert_left

      - source: divert_right
        target: divert_hold_position
        events:
          - logicblock_base_multiballs_active_updated{device.counters.base_multiballs_active.value>0} #Started a MB dont move until done
        events_when_transitioning:
          - ramp_flap_changing_state_from_divert_right_to_hold_current_position
          - ramp_flap_control_stay_in_current_position #This event is unregisterd by other modes, just here as a note to log.
    debug: True
    file_log: full #none basic full
    console_log: full
    persist_state: False # cant be True in config
